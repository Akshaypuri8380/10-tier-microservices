name: CI/CD Pipeline by Fortress Technologies Inc
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SCANNER_HOME: ${{ secrets.SCANNER_HOME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Java, Maven, Node.js
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: "17"
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: Install Trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.20.0/trivy_0.20.0_Linux-64bit.tar.gz
          tar zxvf trivy_0.20.0_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/
      - name: Trivy FS Scan
      run: |
        trivy fs --format table -o trivy-fs-report.html .
      - name: Trivy Scan
        run: trivy image --severity HIGH,CRITICAL limkel/adservice:2.0
      - name: Install OWASP Dependency-Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.0.2/dependency-check-7.0.2-release.zip
          unzip dependency-check-7.0.2-release.zip
          sudo mv dependency-check/bin/* /usr/local/bin/
      - name: OWASP Dependency-Check Scan
        run: dependency-check --scan /10microsvc/src/
      - name: Build and Push Docker images
        run: |
          services=(adservice cartservice checkoutservice currencyservice emailservice frontend loadgenerator paymentservice productcatalogservice recommendationservice shippingservice)
          for service in "${services[@]}"; do
            docker build -t "limkel/$service:2.0" .
            docker push "limkel/$service:2.0"
          done
      - name: Kubectl Action
        uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
      - run: |
          kubectl apply -f deployment-service.yml -n mygithub
          kubectl get svc -n webapps
